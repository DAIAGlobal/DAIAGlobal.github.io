name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci
        working-directory: daia-landing

      - name: Configure environment for Pages and Forms
        run: |
          # If you set a repository variable BASE_PATH, it will be used.
          # Otherwise default to "/<repo-name>" for project pages.
          if [ -n "${{ vars.BASE_PATH }}" ]; then
            echo "BASE_PATH=${{ vars.BASE_PATH }}" >> $GITHUB_ENV
          else
            REPO_NAME='${{ github.event.repository.name }}'
            OWNER='${{ github.repository_owner }}'
            REPO_LC="$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')"
            OWNER_SITE_LC="$(echo "${OWNER}.github.io" | tr '[:upper:]' '[:lower:]')"
            if [ "$REPO_LC" = "$OWNER_SITE_LC" ]; then
              # User/Org pages deploy at root (https://<owner>.github.io)
              echo "BASE_PATH=/" >> $GITHUB_ENV
            else
              # Project pages deploy at https://<owner>.github.io/<repo>
              echo "BASE_PATH=/${REPO_NAME}" >> $GITHUB_ENV
            fi
          fi

          # Pass through contact form endpoint for static submissions (e.g., Formspree/Formspark)
          if [ -n "${{ vars.NEXT_PUBLIC_FORM_ENDPOINT }}" ]; then
            echo "NEXT_PUBLIC_FORM_ENDPOINT=${{ vars.NEXT_PUBLIC_FORM_ENDPOINT }}" >> $GITHUB_ENV
          elif [ -n "${{ vars.FORM_ENDPOINT }}" ]; then
            echo "NEXT_PUBLIC_FORM_ENDPOINT=${{ vars.FORM_ENDPOINT }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.NEXT_PUBLIC_FORM_ENDPOINT }}" ]; then
            echo "NEXT_PUBLIC_FORM_ENDPOINT=${{ secrets.NEXT_PUBLIC_FORM_ENDPOINT }}" >> $GITHUB_ENV
          fi

          # Optional mailto fallback
          if [ -n "${{ vars.NEXT_PUBLIC_CONTACT_EMAIL }}" ]; then
            echo "NEXT_PUBLIC_CONTACT_EMAIL=${{ vars.NEXT_PUBLIC_CONTACT_EMAIL }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.NEXT_PUBLIC_CONTACT_EMAIL }}" ]; then
            echo "NEXT_PUBLIC_CONTACT_EMAIL=${{ secrets.NEXT_PUBLIC_CONTACT_EMAIL }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Build (static export)
        env:
          BASE_PATH: ${{ env.BASE_PATH }}
          NEXT_PUBLIC_FORM_ENDPOINT: ${{ env.NEXT_PUBLIC_FORM_ENDPOINT }}
          NEXT_PUBLIC_CONTACT_EMAIL: ${{ env.NEXT_PUBLIC_CONTACT_EMAIL }}
        run: |
          echo "Using BASE_PATH=$BASE_PATH"
          if [ -n "$NEXT_PUBLIC_FORM_ENDPOINT" ]; then echo "Using NEXT_PUBLIC_FORM_ENDPOINT set"; fi
          if [ -n "$NEXT_PUBLIC_CONTACT_EMAIL" ]; then echo "Using NEXT_PUBLIC_CONTACT_EMAIL set"; fi
          npm run build
        working-directory: daia-landing

      - name: Prepare Pages artifact
        run: |
          # Next.js outputs to "out" when output: 'export' is set
          touch out/.nojekyll
        working-directory: daia-landing

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: daia-landing/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
